---
openapi: 3.0.1
info:
  title: Budget Planner API
  description: Application to track expenses and finance
  contact:
    name: Penguin Coders
    url: https://youtube.com/PenguinCodersNetOfficial
    email: mohit@penguincoders.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Local
security:
- bearerAuth: []
paths:
  "/api/v1/expenses":
    get:
      tags:
      - expense-controller
      operationId: getExpenses
      parameters:
      - name: year
        in: query
        required: true
        schema:
          type: string
      - name: month
        in: query
        required: true
        schema:
          type: string
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MonthlyExpenseResponse"
    post:
      tags:
      - expense-controller
      operationId: addExpense
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewExpenseDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageResponse"
  "/api/v1/auth/signup":
    post:
      tags:
      - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignupRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageResponse"
  "/api/v1/auth/signin":
    post:
      tags:
      - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/JwtResponse"
components:
  schemas:
    NewExpenseDto:
      required:
      - amount
      - category
      - date
      - name
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
        description:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    SignupRequestDto:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 0
          type: string
        email:
          maxLength: 50
          minLength: 0
          type: string
        password:
          maxLength: 120
          minLength: 0
          type: string
    LoginRequestDto:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    JwtResponse:
      type: object
      properties:
        token:
          type: string
        id:
          "$ref": "#/components/schemas/ObjectId"
        username:
          type: string
        email:
          type: string
        type:
          type: string
    ObjectId:
      type: object
      properties:
        timestamp:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
    Expense:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/ObjectId"
        name:
          type: string
        category:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
        description:
          type: string
    MonthlyExpenseResponse:
      type: object
      properties:
        expenses:
          type: array
          items:
            "$ref": "#/components/schemas/Expense"
        total:
          type: number
          format: double
        categoryTotal:
          type: object
          additionalProperties:
            type: number
            format: double
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
